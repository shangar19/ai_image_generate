/*
  # [Schema Migration: Create User Profiles and Image History Tables]
  This script creates the necessary tables for user profiles and image history,
  and sets up Row Level Security (RLS) to ensure users can only access their own data.

  ## Query Description: 
  This operation is structural and safe. It adds new tables and policies without modifying or deleting existing data. It is designed to be run once.

  ## Metadata:
  - Schema-Category: "Structural"
  - Impact-Level: "Low"
  - Requires-Backup: false
  - Reversible: true (by dropping the created tables and policies)

  ## Structure Details:
  - Creates table: `public.user_profiles`
  - Creates table: `public.generated_images`
  - Enables RLS on both tables.
  - Adds policies for SELECT, INSERT, UPDATE, DELETE operations on the new tables.

  ## Security Implications:
  - RLS Status: Enabled on new tables.
  - Policy Changes: Yes, new policies are created to restrict data access to the record owner.
  - Auth Requirements: Policies are based on `auth.uid()`, linking records to the authenticated user.

  ## Performance Impact:
  - Indexes: Primary keys and foreign keys are indexed by default.
  - Triggers: No new triggers are added.
  - Estimated Impact: Low.
*/

-- 1. Create user_profiles table
CREATE TABLE public.user_profiles (
    id uuid NOT NULL PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
    name text,
    email text,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL
);

COMMENT ON TABLE public.user_profiles IS 'Stores public profile information for each user.';

-- 2. Create generated_images table
CREATE TABLE public.generated_images (
    id uuid NOT NULL PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    prompt text,
    image_url text,
    created_at timestamp with time zone DEFAULT now() NOT NULL
);

COMMENT ON TABLE public.generated_images IS 'Stores images generated by users.';

-- 3. Enable Row Level Security (RLS)
ALTER TABLE public.user_profiles ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.generated_images ENABLE ROW LEVEL SECURITY;

-- 4. Create RLS policies for user_profiles
CREATE POLICY "Allow users to view their own profile"
ON public.user_profiles FOR SELECT
USING (auth.uid() = id);

CREATE POLICY "Allow users to insert their own profile"
ON public.user_profiles FOR INSERT
WITH CHECK (auth.uid() = id);

CREATE POLICY "Allow users to update their own profile"
ON public.user_profiles FOR UPDATE
USING (auth.uid() = id)
WITH CHECK (auth.uid() = id);

-- 5. Create RLS policies for generated_images
CREATE POLICY "Allow users to view their own images"
ON public.generated_images FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Allow users to insert their own images"
ON public.generated_images FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Allow users to delete their own images"
ON public.generated_images FOR DELETE
USING (auth.uid() = user_id);
